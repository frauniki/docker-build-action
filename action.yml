name: 'Docker Build Action'
description: 'GitHub Action to build Docker images based on docker-build.yaml configuration'
author: 'frauniki'
branding:
  icon: 'package'
  color: 'blue'

inputs:
  config-file:
    description: 'Path to the docker-build.yaml configuration file'
    required: false
    default: 'docker-build.yaml'

runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install js-yaml
      shell: bash
      run: npm install js-yaml

    - name: Parse docker-build.yaml
      id: parse-config
      uses: actions/github-script@v7
      with:
        script: |
          const parseConfig = require('./src/parse-config.js');
          return parseConfig('${{ inputs.config-file }}');

    - name: Docker Metadata and Build (Legacy)
      if: steps.parse-config.outputs.has_builds == 'false'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.parse-config.outputs.image }}
        tags: ${{ fromJSON(steps.parse-config.outputs.tags || '{}') }}
        flavor: ${{ fromJSON(steps.parse-config.outputs.flavor || '{}') }}
        labels: ${{ fromJSON(steps.parse-config.outputs.labels || '{}') }}

    - name: Build and push (Legacy)
      if: steps.parse-config.outputs.has_builds == 'false'
      uses: docker/build-push-action@v6
      with:
        context: ${{ steps.parse-config.outputs.context }}
        file: ${{ steps.parse-config.outputs.context }}/${{ steps.parse-config.outputs.dockerfile }}
        platforms: ${{ steps.parse-config.outputs.platforms }}
        push: ${{ steps.parse-config.outputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        load: ${{ steps.parse-config.outputs.push == 'false' }}

    - name: Process Multiple Builds
      if: steps.parse-config.outputs.has_builds == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const processBuilds = require('./src/process-builds.js');
          const builds = JSON.parse('${{ steps.parse-config.outputs.builds }}');
          return processBuilds(builds);
